name: Releaser
on:
  push:
    branches-ignore:
      - '**'
    tags:
      - 'v*.*.*'
      # to be used by fork patch-releases ^^
      - 'v*.*.*-*'

jobs:

  # awx compatible binary with correct version of gcc and clang
  binary_centos7_amd64:
    runs-on: ubuntu-latest
    container:
      image: amd64/centos:centos7
    steps:
         - uses: actions/checkout@v2
         - name: install cargo deps and build avail
           run: |
            yum install centos-release-scl -y
            yum install llvm-toolset-7 -y
            yum install gcc-c++ -y
            scl enable llvm-toolset-7 bash
            export PATH="/opt/rh/llvm-toolset-7/root/usr/bin:$PATH"
            export LIBCLANG_PATH="/opt/rh/llvm-toolset-7/root/usr/lib64/"
            curl https://sh.rustup.rs -sSf | sh -s -- -y
            source "$HOME/.cargo/env"
         - uses: actions/upload-artifact@v2
           with:
             name: data-avail-centos7-amd64-binary
             path: Dockerfile

  binary_linux_amd64:
    runs-on: ubuntu-latest
    steps:
         - uses: actions/checkout@v2
         - name: install cargo deps and build avail
           shell: bash
           run: |
            curl https://sh.rustup.rs -sSf | sh -s -- -y
            source "$HOME/.cargo/env"
         - uses: actions/upload-artifact@v2
           with:
             name: data-avail-linux-amd64-binary
             path: entrypoint.sh

  # compile all binaries from previous jobs into single release
  binary_publish:
    needs: [binary_centos7_amd64, binary_linux_amd64]
    runs-on: ubuntu-latest
    steps:
         - uses: actions/download-artifact@v2
           with:
             name: data-avail-centos7-amd64-binary
         - uses: actions/download-artifact@v2
           with:
             name: data-avail-linux-amd64-binary
         - name: Prepare
           id: prepare
           run: |
               TAG=${GITHUB_REF#refs/tags/}
               echo ::set-output name=tag_name::${TAG}
         - name: publish binaries
           uses: svenstaro/upload-release-action@v2
           with:
             repo_token: ${{ secrets.PAT_TOKEN }}
             file: /home/runner/work/avail/avail/*
             release_name: ${{ steps.prepare.outputs.tag_name }}
             tag: ${{ steps.prepare.outputs.tag_name }}
             overwrite: true
             file_glob: true

  docker_linux_amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Prepare
        id: prepare
        run: |
            TAG=${GITHUB_REF#refs/tags/}
            echo ::set-output name=tag_name::${TAG}
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push images
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./DockerfileTest
          platforms: linux/amd64
          push: true
          tags: rebelartists/tests:${{ steps.prepare.outputs.tag_name }}
