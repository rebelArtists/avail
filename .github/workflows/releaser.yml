name: Polygon Avail Releaser
on: push

jobs:
  # release_centos7_amd64:
  #   runs-on: ubuntu-latest
  #   container:
  #     image: amd64/centos:centos7
  #   env:
  #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #   steps:
  #        - uses: actions/checkout@v2
  #        - name: install cargo deps and build avail
  #          run: |
  #           yum install centos-release-scl -y
  #           yum install llvm-toolset-7 -y
  #           yum install gcc-c++ -y
  #           scl enable llvm-toolset-7 bash
  #           export PATH="/opt/rh/llvm-toolset-7/root/usr/bin:$PATH"
  #           export LIBCLANG_PATH="/opt/rh/llvm-toolset-7/root/usr/lib64/"
  #           curl https://sh.rustup.rs -sSf | sh -s -- -y
  #           source "$HOME/.cargo/env"
  #           cargo build --release -p data-avail

  # release_linux_amd64:
  #   runs-on: ubuntu-latest
  #   container:
  #     image: amd64/ubuntu:jammy
  #   env:
  #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #   steps:
  #        - uses: actions/checkout@v2
  #        - name: install cargo deps and build avail
  #          run: |
  #           sudo apt-get install curl -y
  #           curl https://sh.rustup.rs -sSf | sh -s -- -y
  #           source "$HOME/.cargo/env"
  #           cargo build --release -p data-avail

  docker_releases:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
      -
        name: Prepare
        id: prepare
        run: |
            TAG=${GITHUB_REF#refs/tags/}
            echo ::set-output name=tag_name::${TAG}
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.prepare.outputs.tag_name }}

# add docker buildx

# add binary builds for linux (arm64 need self-hosted runner...)
