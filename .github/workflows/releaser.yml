name: Polygon Avail Releaser
on: push

jobs:

  binary_centos7_amd64:
    runs-on: ubuntu-latest
    container:
      image: amd64/centos:centos7
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
         - uses: actions/checkout@v2
         - name: install cargo deps and build avail
           run: |
            yum install centos-release-scl -y
            yum install llvm-toolset-7 -y
            yum install gcc-c++ -y
            scl enable llvm-toolset-7 bash
            export PATH="/opt/rh/llvm-toolset-7/root/usr/bin:$PATH"
            export LIBCLANG_PATH="/opt/rh/llvm-toolset-7/root/usr/lib64/"
            curl https://sh.rustup.rs -sSf | sh -s -- -y
            source "$HOME/.cargo/env"
            cargo build --release -p data-avail
            mv target/release/data-avail target/release/data-avail-centos7-amd64
         - uses: actions/upload-artifact@v2
           with:
             name: data-avail-centos7-amd64-binary
             path: target/release/data-avail-centos7-amd64

  binary_linux_amd64:
    runs-on: ubuntu-latest
    steps:
         - uses: actions/checkout@v2
         - name: install cargo deps and build avail
           shell: bash
           run: |
            curl https://sh.rustup.rs -sSf | sh -s -- -y
            source "$HOME/.cargo/env"
            cargo build --release -p data-avail
            mv target/release/data-avail target/release/data-avail-linux-amd64
         - uses: actions/upload-artifact@v2
           with:
             name: data-avail-linux-amd64-binary
             path: target/release/data-avail-linux-amd64

  binary_publish:
    needs: [binary_centos7_amd64, binary_linux_amd64]
    runs-on: ubuntu-latest
    steps:
         - uses: actions/download-artifact@v2
           with:
             name: data-avail-centos7-amd64-binary
         - uses: actions/download-artifact@v2
           with:
             name: data-avail-linux-amd64-binary
         - name: publish binaries
           uses: svenstaro/upload-release-action@v2
           with:
             repo_token: ${{ secrets.PAT_TOKEN }}
             file: /home/runner/work/avail/avail/data-avail*
             release_name: v0.1
             tag: v0.1
             overwrite: true
             file_glob: true

  docker_linux_amd64:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Prepare
        id: prepare
        run: |
            TAG=${GITHUB_REF#refs/tags/}
            echo ::set-output name=tag_name::${TAG}
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push images
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: rebelartists/tests:latest
