name: Polygon Avail Releaser
on: push

jobs:
  # release_centos7_amd64:
  #   runs-on: ubuntu-latest
  #   container:
  #     image: amd64/centos:centos7
  #   env:
  #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #   steps:
  #        - uses: actions/checkout@v2
  #        - name: install cargo deps and build avail
  #          run: |
  #           yum install centos-release-scl -y
  #           yum install llvm-toolset-7 -y
  #           yum install gcc-c++ -y
  #           scl enable llvm-toolset-7 bash
  #           export PATH="/opt/rh/llvm-toolset-7/root/usr/bin:$PATH"
  #           export LIBCLANG_PATH="/opt/rh/llvm-toolset-7/root/usr/lib64/"
  #           curl https://sh.rustup.rs -sSf | sh -s -- -y
  #           source "$HOME/.cargo/env"
  #           cargo build --release -p data-avail

  release_linux_amd64:
    runs-on: ubuntu-latest
    steps:
         - uses: actions/checkout@v2
         - name: install cargo deps and build avail
           shell: bash
           run: |
            curl https://sh.rustup.rs -sSf | sh -s -- -y
            source "$HOME/.cargo/env"
            cargo build --release -p data-avail

  docker_releases:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'arm64,arm'
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Prepare
        id: prepare
        run: |
          DOCKER_IMAGE=rebelartists/tests
          DOCKER_PLATFORMS=linux/amd64,linux/arm64
          VERSION=latest
          TAGS="--tag ${DOCKER_IMAGE}:${VERSION}"

          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=buildx_args::--platform ${DOCKER_PLATFORMS} \
            --build-arg VERSION=${VERSION} \
            --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
            --build-arg VCS_REF=${GITHUB_SHA::8} \
            ${TAGS} --file ./Dockerfile ./
      -
        name: Set up Docker Buildx
        uses: crazy-max/ghaction-docker-buildx@v3
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Docker Buildx (push)
        if: success() && github.event_name != 'pull_request'
        run: |
          docker buildx build --output "type=image,push=true" ${{ steps.prepare.outputs.buildx_args }}
